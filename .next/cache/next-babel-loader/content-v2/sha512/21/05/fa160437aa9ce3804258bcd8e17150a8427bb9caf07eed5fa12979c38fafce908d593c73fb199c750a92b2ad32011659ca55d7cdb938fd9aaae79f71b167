{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/raudipra/Documents/Projects/Portfolio/portfolio-cms-fe/components/Forms/ImageUploader.js\";\nimport React, { useState, useRef, useEffect, DependencyList } from 'react';\nimport ReactCrop, { centerCrop, makeAspectCrop, Crop, PixelCrop } from 'react-image-crop';\nimport { canvasPreview } from './canvasPreview';\nimport 'react-image-crop/dist/ReactCrop.css'; // This is to demonstate how to make and center a % aspect crop\n// which is a bit trickier so we use some helper functions.\n\nfunction centerAspectCrop(mediaWidth, mediaHeight, aspect) {\n  return centerCrop(makeAspectCrop({\n    unit: '%',\n    width: 90\n  }, aspect, mediaWidth, mediaHeight), mediaWidth, mediaHeight);\n}\n\nfunction useDebounceEffect(fn, waitTime, deps) {\n  useEffect(() => {\n    const t = setTimeout(() => {\n      fn.apply(undefined, deps);\n    }, waitTime);\n    return () => {\n      clearTimeout(t);\n    };\n  }, deps);\n}\n\nfunction ImageUploader() {\n  const {\n    0: imgSrc,\n    1: setImgSrc\n  } = useState('');\n  const previewCanvasRef = useRef(null);\n  const imgRef = useRef(null);\n  const {\n    0: crop,\n    1: setCrop\n  } = useState();\n  const {\n    0: completedCrop,\n    1: setCompletedCrop\n  } = useState();\n  const {\n    0: scale,\n    1: setScale\n  } = useState(1);\n  const {\n    0: rotate,\n    1: setRotate\n  } = useState(0);\n  const {\n    0: aspect,\n    1: setAspect\n  } = useState(16 / 9);\n  const {\n    0: files,\n    1: setFile\n  } = useState([]);\n  const {\n    0: message,\n    1: setMessage\n  } = useState();\n\n  const handleFile = e => {\n    setMessage(\"\");\n    let file = e.target.files;\n\n    for (let i = 0; i < file.length; i++) {\n      const fileType = file[i]['type'];\n      const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n\n      if (validImageTypes.includes(fileType)) {\n        setFile([...files, file[i]]);\n      } else {\n        setMessage(\"only images accepted\");\n      }\n    }\n  };\n\n  const removeImage = i => {\n    setFile(files.filter(x => x.name !== i));\n  };\n\n  function onSelectFile(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      setCrop(undefined); // Makes crop preview update between images.\n\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        var _reader$result;\n\n        return setImgSrc(((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString()) || '');\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  function onImageLoad(e) {\n    if (aspect) {\n      const {\n        width,\n        height\n      } = e.currentTarget;\n      setCrop(centerAspectCrop(width, height, aspect));\n    }\n  }\n\n  useDebounceEffect(async () => {\n    if (completedCrop !== null && completedCrop !== void 0 && completedCrop.width && completedCrop !== null && completedCrop !== void 0 && completedCrop.height && imgRef.current && previewCanvasRef.current) {\n      // We use canvasPreview as it's much faster than imgPreview.\n      canvasPreview(imgRef.current, previewCanvasRef.current, completedCrop, scale, rotate);\n    }\n  }, 100, [completedCrop, scale, rotate]);\n\n  function handleToggleAspectClick() {\n    if (aspect) {\n      setAspect(undefined);\n    } else if (imgRef.current) {\n      const {\n        width,\n        height\n      } = imgRef.current;\n      setAspect(16 / 9);\n      setCrop(centerAspectCrop(width, height, 16 / 9));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Crop-Controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: onSelectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"scale-input\",\n          children: \"Scale: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"scale-input\",\n          type: \"number\",\n          step: \"0.1\",\n          value: scale,\n          disabled: !imgSrc,\n          onChange: e => setScale(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rotate-input\",\n          children: \"Rotate: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"rotate-input\",\n          type: \"number\",\n          value: rotate,\n          disabled: !imgSrc,\n          onChange: e => setRotate(Math.min(180, Math.max(-180, Number(e.target.value))))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleAspectClick,\n          children: [\"Toggle aspect \", aspect ? 'off' : 'on']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), !!imgSrc && /*#__PURE__*/_jsxDEV(ReactCrop, {\n      crop: crop,\n      onChange: (_, percentCrop) => setCrop(percentCrop),\n      onComplete: c => setCompletedCrop(c),\n      aspect: aspect,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imgRef,\n        alt: \"Crop me\",\n        src: imgSrc,\n        style: {\n          transform: `scale(${scale}) rotate(${rotate}deg)`\n        },\n        onLoad: onImageLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !!completedCrop && /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: previewCanvasRef,\n        style: {\n          border: '1px solid black',\n          objectFit: 'contain',\n          width: completedCrop.width,\n          height: completedCrop.height\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p md:w w-[360px] rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex justify-center items-center bg-white text-[12px] mb-1 text-red-500\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-32 w-full overflow-hidden relative shadow-md border-2 items-center rounded-md cursor-pointer   border-gray-400 border-dotted\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFile,\n          className: \"h-full w-full opacity-0 z-10 absolute\",\n          multiple: \"multiple\",\n          name: \"files[]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full w-full bg-gray-200 absolute z-1 flex justify-center items-center top-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-folder-open text-[30px] text-gray-400 text-center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-[12px]\",\n              children: `Drag and Drop a file`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mt-2\",\n        children: files.map((file, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-16 flex items-center justify-between rounded p-3 bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-row items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-12 w-12 \",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"w-full h-full rounded\",\n                  src: URL.createObjectURL(file)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"truncate w-44\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                removeImage(file.name);\n              },\n              className: \"h-6 w-6 bg-red-400 flex items-center cursor-pointer justify-center rounded-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can text-white text-[14px]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 9\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ImageUploader;","map":{"version":3,"sources":["/Users/raudipra/Documents/Projects/Portfolio/portfolio-cms-fe/components/Forms/ImageUploader.js"],"names":["React","useState","useRef","useEffect","DependencyList","ReactCrop","centerCrop","makeAspectCrop","Crop","PixelCrop","canvasPreview","centerAspectCrop","mediaWidth","mediaHeight","aspect","unit","width","useDebounceEffect","fn","waitTime","deps","t","setTimeout","apply","undefined","clearTimeout","ImageUploader","imgSrc","setImgSrc","previewCanvasRef","imgRef","crop","setCrop","completedCrop","setCompletedCrop","scale","setScale","rotate","setRotate","setAspect","files","setFile","message","setMessage","handleFile","e","file","target","i","length","fileType","validImageTypes","includes","removeImage","filter","x","name","onSelectFile","reader","FileReader","addEventListener","result","toString","readAsDataURL","onImageLoad","height","currentTarget","current","handleToggleAspectClick","Number","value","Math","min","max","_","percentCrop","c","transform","border","objectFit","map","key","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, DependencyList } from 'react'\nimport ReactCrop, {\n  centerCrop,\n  makeAspectCrop,\n  Crop,\n  PixelCrop,\n} from 'react-image-crop'\nimport { canvasPreview } from './canvasPreview'\n\nimport 'react-image-crop/dist/ReactCrop.css'\n\n// This is to demonstate how to make and center a % aspect crop\n// which is a bit trickier so we use some helper functions.\nfunction centerAspectCrop(mediaWidth, mediaHeight, aspect) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: '%',\n        width: 90,\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight,\n    ),\n    mediaWidth,\n    mediaHeight,\n  )\n}\n\nfunction useDebounceEffect(fn, waitTime, deps) {\n  useEffect(() => {\n    const t = setTimeout(() => {\n      fn.apply(undefined, deps)\n    }, waitTime)\n\n    return () => {\n      clearTimeout(t)\n    }\n  }, deps)\n}\n\nfunction ImageUploader() {\n  const [imgSrc, setImgSrc] = useState('')\n  const previewCanvasRef = useRef(null)\n  const imgRef = useRef(null)\n  const [crop, setCrop] = useState()\n  const [completedCrop, setCompletedCrop] = useState()\n  const [scale, setScale] = useState(1)\n  const [rotate, setRotate] = useState(0)\n  const [aspect, setAspect] = useState(16 / 9)\n\n\tconst [files, setFile] = useState([]);\n\tconst [message, setMessage] = useState();\n\tconst handleFile = (e) => {\n\t\t\tsetMessage(\"\");\n\t\t\tlet file = e.target.files;\n\n\t\t\tfor (let i = 0; i < file.length; i++) {\n\t\t\t\t\tconst fileType = file[i]['type'];\n\t\t\t\t\tconst validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n\t\t\t\t\tif (validImageTypes.includes(fileType)) {\n\t\t\t\t\t\t\tsetFile([...files, file[i]]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetMessage(\"only images accepted\");\n\t\t\t\t\t}\n\t\t\t}\n\t};\n\tconst removeImage = (i) => {\n\t\tsetFile(files.filter(x => x.name !== i));\n\t}\n\n\n  function onSelectFile(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      setCrop(undefined) // Makes crop preview update between images.\n      const reader = new FileReader()\n      reader.addEventListener('load', () =>\n        setImgSrc(reader.result?.toString() || ''),\n      )\n      reader.readAsDataURL(e.target.files[0])\n    }\n  }\n\n  function onImageLoad(e) {\n    if (aspect) {\n      const { width, height } = e.currentTarget\n      setCrop(centerAspectCrop(width, height, aspect))\n    }\n  }\n\n  useDebounceEffect(\n    async () => {\n      if (\n        completedCrop?.width &&\n        completedCrop?.height &&\n        imgRef.current &&\n        previewCanvasRef.current\n      ) {\n        // We use canvasPreview as it's much faster than imgPreview.\n        canvasPreview(\n          imgRef.current,\n          previewCanvasRef.current,\n          completedCrop,\n          scale,\n          rotate,\n        )\n      }\n    },\n    100,\n    [completedCrop, scale, rotate],\n  )\n\n  function handleToggleAspectClick() {\n    if (aspect) {\n      setAspect(undefined)\n    } else if (imgRef.current) {\n      const { width, height } = imgRef.current\n      setAspect(16 / 9)\n      setCrop(centerAspectCrop(width, height, 16 / 9))\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Crop-Controls\">\n        <input type=\"file\" accept=\"image/*\" onChange={onSelectFile} />\n        <div>\n          <label htmlFor=\"scale-input\">Scale: </label>\n          <input\n            id=\"scale-input\"\n            type=\"number\"\n            step=\"0.1\"\n            value={scale}\n            disabled={!imgSrc}\n            onChange={(e) => setScale(Number(e.target.value))}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"rotate-input\">Rotate: </label>\n          <input\n            id=\"rotate-input\"\n            type=\"number\"\n            value={rotate}\n            disabled={!imgSrc}\n            onChange={(e) =>\n              setRotate(Math.min(180, Math.max(-180, Number(e.target.value))))\n            }\n          />\n        </div>\n        <div>\n          <button onClick={handleToggleAspectClick}>\n            Toggle aspect {aspect ? 'off' : 'on'}\n          </button>\n        </div>\n      </div>\n      {!!imgSrc && (\n        <ReactCrop\n          crop={crop}\n          onChange={(_, percentCrop) => setCrop(percentCrop)}\n          onComplete={(c) => setCompletedCrop(c)}\n          aspect={aspect}\n        >\n          <img\n            ref={imgRef}\n            alt=\"Crop me\"\n            src={imgSrc}\n            style={{ transform: `scale(${scale}) rotate(${rotate}deg)` }}\n            onLoad={onImageLoad}\n          />\n        </ReactCrop>\n      )}\n      <div>\n        {!!completedCrop && (\n          <canvas\n            ref={previewCanvasRef}\n            style={{\n              border: '1px solid black',\n              objectFit: 'contain',\n              width: completedCrop.width,\n              height: completedCrop.height,\n            }}\n          />\n        )}\n      </div>\n    \n\t\t\t<div className=\"p md:w w-[360px] rounded-md\">\n\t\t\t\t<span className=\"flex justify-center items-center bg-white text-[12px] mb-1 text-red-500\">{message}</span>\n\t\t\t\t<div className=\"h-32 w-full overflow-hidden relative shadow-md border-2 items-center rounded-md cursor-pointer   border-gray-400 border-dotted\">\n\t\t\t\t\t<input type=\"file\" onChange={handleFile} className=\"h-full w-full opacity-0 z-10 absolute\" multiple=\"multiple\" name=\"files[]\" />\n\t\t\t\t\t<div className=\"h-full w-full bg-gray-200 absolute z-1 flex justify-center items-center top-0\">\n\t\t\t\t\t\t<div className=\"flex flex-col\">\n\t\t\t\t\t\t\t<i className=\"mdi mdi-folder-open text-[30px] text-gray-400 text-center\"></i>\n\t\t\t\t\t\t\t<span className=\"text-[12px]\">{`Drag and Drop a file`}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-wrap gap-2 mt-2\">\n\t\t\t\t\t{files.map((file, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={key} className='w-full h-16 flex items-center justify-between rounded p-3 bg-white'>\n\t\t\t\t\t\t\t\t<div className=\"flex flex-row items-center gap-2\">\n\t\t\t\t\t\t\t\t\t<div className=\"h-12 w-12 \">\n\t\t\t\t\t\t\t\t\t\t<img className=\"w-full h-full rounded\" src={URL.createObjectURL(file)} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<span className=\"truncate w-44\">{file.name}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div onClick={() => { removeImage(file.name) }} className=\"h-6 w-6 bg-red-400 flex items-center cursor-pointer justify-center rounded-sm\">\n\t\t\t\t\t\t\t\t\t<i className=\"mdi mdi-trash-can text-white text-[14px]\"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>   \t\t\n\t\t\t\t\t\t)})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  )\n}\n\nexport default ImageUploader;"]},"metadata":{},"sourceType":"module"}